import os
import logging
from aiogram import Router, F
from aiogram.types import CallbackQuery

router = Router()
logger = logging.getLogger("zoo_bot.handlers.contact")

@router.callback_query(F.data.startswith("contact_"))
async def handle_contact_request(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "üìû –°–≤—è–∑–∞—Ç—å—Å—è":
    ‚Äî —Å–æ–±–∏—Ä–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –µ–≥–æ —Ç–æ—Ç–µ–º–Ω–æ–º –∂–∏–≤–æ—Ç–Ω–æ–º,
    ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ —Ñ–∞–π–ª,
    ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    user = callback.from_user
    totem_key = callback.data.replace("contact_", "").strip()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∑–æ–æ–ø–∞—Ä–∫–∞
    request_text = (
        "üì© –ù–æ–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å:\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.full_name} (ID: {user.id})\n"
        f"üêæ –¢–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ: {totem_key}\n"
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ —Ñ–∞–π–ª
    contact_dir = 'data'
    contact_path = os.path.join(contact_dir, 'contact_requests.txt')

    try:
        os.makedirs(contact_dir, exist_ok=True)
        with open(contact_path, 'a', encoding='utf-8') as f:
            f.write(request_text + "\n")
        logger.info(f"–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω: user_id={user.id}, totem={totem_key}")
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {e}")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await callback.message.answer(
        "üìß –í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –∑–æ–æ–ø–∞—Ä–∫–∞! "
        "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
    )
    await callback.answer()