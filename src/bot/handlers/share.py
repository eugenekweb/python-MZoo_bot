import logging
from aiogram import Router, F, types

router = Router()
logger = logging.getLogger("zoo_bot.handlers.sharing")

@router.callback_query(F.data.startswith("share_"))
async def handle_share_request(callback: types.CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ ¬´üì¢ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è¬ª.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ,
    –∫–æ—Ç–æ—Ä–æ–µ –æ–Ω –º–æ–∂–µ—Ç –ª–µ–≥–∫–æ –ø–µ—Ä–µ—Å–ª–∞—Ç—å –∏–ª–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å.
    """
    user = callback.from_user
    totem_key = callback.data.replace("share_", "").strip()

    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –≤—ã–±—Ä–∞–ª –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º: {totem_key}")

    # –ü–æ–ª—É—á–∞–µ–º username –±–æ—Ç–∞ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏
    try:
        bot_info = await callback.bot.get_me()
        bot_username = bot_info.username.replace("_", r"\_")
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–º—è –±–æ—Ç–∞: {e}")
        bot_username = "MZoo_Bot"


    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π –∫–∞–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
    message_text = (
        "üì≤ –ß—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º:\n"
        "1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã—à–µ.\n"
        "2. –ù–∞–∂–º–∏—Ç–µ ¬´–ü–µ—Ä–µ—Å–ª–∞—Ç—å¬ª.\n"
        "3. –í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç –∏–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç.\n"
        "4. –ò–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –±–æ—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –ª—é–±–æ–º –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ:\n"
        f"https://t.me/{bot_username}"
    )

    # –í–∞—Ä–∏–∞–Ω—Ç: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Å–ª–∞—Ç—å
    await callback.message.answer(
        f"{message_text}\n",
        parse_mode="Markdown"
    )

    await callback.answer()
